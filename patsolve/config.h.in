/*
 * This file is part of patsolve. It is subject to the license terms in
 * the LICENSE file found in the top-level directory of this distribution
 * and at https://bitbucket.org/shlomif/patsolve-shlomif/src/LICENSE . No
 * part of patsolve, including this file, may be copied, modified, propagated,
 * or distributed except according to the terms contained in the COPYING file.
 *
 * Copyright (c) 2002 Tom Holroyd
 */

/*
 * config.h - Configuration file for Freecell Solver
 *
 * ${AUTOGENERATED_CONFIG_H}
*/

#ifndef FC_SOLVE__CONFIG_H
#define FC_SOLVE__CONFIG_H

#ifdef __cplusplus
extern "C" {
#endif

#include "fcs_back_compat.h"
#cmakedefine COMPACT_STATES
#cmakedefine INDIRECT_STACK_STATES

#cmakedefine CARD_DEBUG_PRES

/*
 * Define this macro if the C compiler supports the keyword inline or
 * a similar keyword that was found by Autoconf (and defined as inline).
 * */
#cmakedefine HAVE_C_INLINE

#cmakedefine FCS_INLINE_KEYWORD ${FCS_INLINE_KEYWORD}

#define PREV_STATES_SORT_MARGIN 32

/* The size of a single pack in alloc.c/alloc.h measured in 1024 chars. */
#cmakedefine FCS_IA_PACK_SIZE ${FCS_IA_PACK_SIZE}

#ifndef FCS_FREECELL_ONLY
#cmakedefine FCS_FREECELL_ONLY
#endif

#cmakedefine FCS_DISABLE_SIMPLE_SIMON

/*
 * This macro disables the flipping card logic. The flipping card logic
 * was an experimental feature that aimed to give Freecell Solver the
 * ability to solve Gypsy and Klondike-like games. In practice, this
 * didn't happen due to other technical difficulties.
 * */
/*
 * This flag used to slow things down a little:
 *
 * http://tech.groups.yahoo.com/group/fc-solve-discuss/message/941
 *
 * However, now it seems that it makes the program a little faster, as it
 * should, so you should enable it.
 * */
#cmakedefine FCS_WITHOUT_CARD_FLIPPING

/*
 * Get rid of the visited_iter counter on each state's extra_info. It is
 * used a little for debugging, but otherwise is not needed for the run-time
 * operation.
 * */
#cmakedefine FCS_WITHOUT_VISITED_ITER

/*
 * Get rid of the "depth" field on each state's extra_info. It is
 * used a little, but otherwise is not needed for the run-time
 * operation.
 * */
#cmakedefine FCS_WITHOUT_DEPTH_FIELD

/*
 * This flag controls a hash behaviour. It seems to improve things somewhat.
 * */
#cmakedefine FCS_INLINED_HASH_COMPARISON ${FCS_INLINED_HASH_COMPARISON}

#cmakedefine FCS_INT_BIT_SIZE_LOG2 ${FCS_INT_BIT_SIZE_LOG2}

#cmakedefine FCS_WITH_CONTEXT_VARIABLE

/*
 * The size of void*.
 */
@SIZEOF_VOID_P_CODE@

/*
 * This flag determines whether we are using the more compact but slower,
 * internal move tokens.
 *  */
#cmakedefine FCS_USE_COMPACT_MOVE_TOKENS

#cmakedefine FCS_HARD_CODED_NUM_FCS_FOR_FREECELL_ONLY ${FCS_HARD_CODED_NUM_FCS_FOR_FREECELL_ONLY}

#ifndef FCS_HARD_CODED_NUM_FCS_FOR_FREECELL_ONLY
#define FCS_HARD_CODED_NUM_FCS_FOR_FREECELL_ONLY 4
#endif

#ifndef FCS_WITH_MOVES
#define FCS_WITH_MOVES
#endif

/*
 * The maximal number of Freecells. For efficiency's sake it should be a
 * multiple of 4.
 * */

#ifdef FCS_FREECELL_ONLY
#define HARD_CODED_NUM_FREECELLS FCS_HARD_CODED_NUM_FCS_FOR_FREECELL_ONLY
#define HARD_CODED_NUM_STACKS 8
#define HARD_CODED_NUM_DECKS 1
#ifndef FCS_DISABLE_SIMPLE_SIMON
#define FCS_DISABLE_SIMPLE_SIMON
#endif

#endif

#ifdef HARD_CODED_NUM_FREECELLS
#define MAX_NUM_FREECELLS HARD_CODED_NUM_FREECELLS
#else
#define MAX_NUM_FREECELLS ${MAX_NUM_FREECELLS}
#endif

/*
 * The maximal number of Stacks. For efficiency's sake it should be a
 * multiple of 4.
 * */

#ifdef HARD_CODED_NUM_STACKS
#define MAX_NUM_STACKS HARD_CODED_NUM_STACKS
#else
#define MAX_NUM_STACKS ${MAX_NUM_STACKS}
#endif
/*
 * The maximal number of initial cards that can be found in a stack.
 * */
#define MAX_NUM_INITIAL_CARDS_IN_A_STACK ${MAX_NUM_INITIAL_CARDS_IN_A_STACK}

#ifdef HARD_CODED_NUM_DECKS
#define MAX_NUM_DECKS HARD_CODED_NUM_DECKS
#else
#define MAX_NUM_DECKS ${MAX_NUM_DECKS}
#endif

/* Define to 1 if you have the `m' library (-lm). */
#cmakedefine HAVE_LIBM

#cmakedefine HAVE_STRNCASECMP

/* Name of package */
#define PACKAGE "${PACKAGE}"

/* Define to the address where bug reports for this package should be sent. */
#define PACKAGE_BUGREPORT "${PACKAGE_BUGREPORT}"

/* Define to the full name of this package. */
#define PACKAGE_NAME "${PACKAGE_NAME}"

/* Define to the full name and version of this package. */
#define PACKAGE_STRING "${PACKAGE_STRING}"

/* Define to the one symbol short name of this package. */
#define PACKAGE_TARNAME "${PACKAGE_TARNAME}"

/* Define to the version of this package. */
#define PACKAGE_VERSION "${PACKAGE_VERSION}"

/* Version number of package */
#define VERSION "${VERSION}"

#ifndef FCS_INT_BIT_SIZE_LOG2
#define FCS_INT_BIT_SIZE_LOG2 ((sizeof(int) == 8) ? 6 : (sizeof(int) == 2) ? 4 : 5)
#endif

#ifdef __cplusplus
}
#endif

#endif    /* #ifndef FC_SOLVE__CONFIG_H */
